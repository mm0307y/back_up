2025년 02월 06일 수업 내용 정리

스프링

프레임 워크 - 틀
Spring으로 무엇을 제공받나요?
클래스(자바)가 빈(스프링)이다.
인스터스화 : A a = newe A(); -> heap메모리 영역에 A클래스 로딩되어 있는 상태이다. - 활용할 준비가 됐다.
클래스의 구성요소 : 명사형 + 동사형
a.carName, a.speedUp();
빈의  관리를 지원 받는다.
Spring은 무언가를 설치해서 사용하는 것이 아니다.
xxx.jar(클래스, 인터페이스, 추상클래스)
SOLID - 5대 원칙
spring-core.jar
spring-beans.jar - BeanFactory - 빈 라이프사이클 관리 init() - service() - destory() - 서블릿 컨테이너
spring-context.jar - ApplicationContex - 빈관리(BreaFactory 기능은 모두 포함)
전자정부프레임워크 - spring기반(spring-core.jar)
필요해? 그러면 내가 그때 주입해 줄께 Dependency Injextion
프레임워크와 라이브러의 차이점
라이브러리는 제어권이 없다.
실력차이 - 극복할까? - 뭔가를 내가 제공하자.

독립적이다.
결합도를 낮추는 코드를 전개하자

추상클래스와 인터페이를 공부한다. - 설계
추상클래스와 인터페이스 중심의 코딩을 전개하라 - 결합도가 낮아지고 독립적이다.
나는 메서드가 있지만 body가 없다. - 실행문이 없다. - 변수선언이 없다. 제어문
반드시 구현체 클래스가 있어야 한다.
List list = new ArrayList();
List list = new Vector();
선언부와 생성부가 다르다.
다형성을 누릴 수 있다(선언부와 생성부가 다를때만 가능하다.)
메서드 이름이 같은데 기능이 다르다.
스프링은 이러한 추상클래스와 인터페이스를 지원한다.
추상메서드 -> 오버라딩 -> 제약조건 -> 선언부를 건드리지 않는다.(1. retrun타입, 2. 파라미터 - 약속)
내가 너 대신 인스턴스화를 해줄께 + 생성, 삭제
스프링을 사용하면 제약조건이 있다.
리턴타입에 대한 조건 - void or String or ModelAndView(spring3, 4) - 레거시
패턴학습 - 반복된다. - 변하는 건 있다. - 뭐가 변하죠? - 테이블이름(오라클), 컬러명이 달라요 - 자동화
자동화 - 생산성이 높다. - 코딩량이 줄어든다. - 누가 도와줘야 한다. - 다른사람이 해준다.(스프링)
사람 - 실수 - 아프면 느리다. - 빠를때도 있고 느릴때도 있다.
기계 - 실수 없다. - 빠르다.

모두가 평균이면 좋겠다.
주니어가 시니어 처럼 개발 할 수 있도록 도와준다.

단점 : 진입장벽이 높다.
장점 : 시니어처럼 가능하다.

패턴학습

원격프로램을 작성해야 한다.
로컬이다.

와이파이 - 네트워크 7계층
TCP/IP, 스위칭 허브, 모뎀, 네트워크카드
HTTP - 텍스트기반 - 요청
클라이언트 - 서버
REST API
GET - @GetMapping("페이지이름 or 요청이름")
POST - @PostMapping()
PUT - @PutMapping()
DELETE - @DeleteMapping()

저 4가지 어노테이션에는 메서드가 있다.

메서드 - 나는 리턴타입과 파라미터를 결정할 수 있다.

리런타입과 관련된 어노테이션(클래스)정리하기 - void, String, ModelAndView(레거시)

UI를 지원하는 클래스가 별도로 있다. Model -> JAP - hitbernate - 쿼리문이 없다. - how? - 클래스(모델 - 무한 루프-조인)

파라미터를 지원하는 어노테이션(클래스포함) 있다. - @RequestParam, @RequestBody

@Bean
-----------------------------------------------------------------------------------------------------------------------------------------------

이번 주요 학습 내용
- 원격프로그래밍 -> @Controller, @RestController
- @RequestParam, @ModelAttribute
- 리액트와 스프링 부트 연계하기
(CORS, setProxy.js(api), config -> CorsConfigurer
- RrestAPI
@GetMapping, @PostMapping, @PutMapping, @DeleteMapping
- model객체 - JPA관련

- 프로젝트
주제선정 - ERP, 복습(사이트 + 거래, 매매, 양도, 업무)
DB설계 - 업무정의서, 테이블 정의서, ERD(Entity Relation Diagram) : 조인, JPA
- git, 개발 툴, 토드, 비버DB

단위 테스트
- 화면이 없이도 나는 코딩을 할 수 있다.
1) post방식일 때 값을 넘기는 방법 (2가지 이상)
: body에 넘긴다.
: 폼전송(고전), 객체전송(리액트전용)
2) 




















