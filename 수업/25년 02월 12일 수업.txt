2025년 02월 12일 수요일 수업 정리

--------------------------------------------------------------------------------------------------------------------------------------------
카카오 로그인 실습
-> 클라우드 서비스 활용
-> 포털은 인증 처리를 어떻게 하고 있는지?? 관찰해 보자
-> JWT인증 - 토큰을 활용

1. 인가코드를 받는 것은 굳이 스프링을 이용할 필요가 없다.
요청을 카카오 서버로 전송한다. - GET방식 - 쿼리스트링이 있다. 
질문 : http프로토콜은 비상태 프로토콜이다.
3000번에서 카카오 서버 사이에 요청이 보내지고 나면 연결이 끊어진다.
redirect_url 쿼리스트링에 붙여서 보내줘
카카오 서버에서 클라이언트에게 인가 코드를 보내고 싶다.
인가 코드가 있어야 토큰을 요청을 해서 받아올 수 있다.
카카오가 메시지를 다시 전송할 수 있도록 네가 정한 8000번 서버의
콜백함수를 정하고 그 URL을 개발자 센터에 미리 등록해줘


--------------------------------------------------------------------------------------------------------------------------------------------
spring boot 로그인 - 세션 저장소

spring boot security - 세션 저장소 다름 (읽기와 쓰기도 다른다.)

토큰 - jwt - oAuth2
--------------------------------------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html>
<body>
 <h2>HTML Forms</h2>
action 올수 있는 확장자
html - UI/UX - 정적페이지(입력)
처리는 불가하다.
로컬 PC 다운로드 - 시간차(동기화 없다.)
로컬 PC 브라우저 출력 나간다.

2. 화면과 로직(처리-메서드-오라클연동)은 분리되어야 한다.
개발
유지보수 - 장애처리 포함, 이종간의 시스템 문제 의식.

대조군
리액트 how? form태그를 안쓰는데 어떻게 진행하지?
SPA(싱글페이지)
1. 동적으로 해결 - onChanage - 자바스크립트
100 중 50%는 UI, DB는 25~30%, 
form태그 사용가능하다.
다른 여러가지 방법이 존재한다.
사용자가 입력한 값을 useState 훅에 담을 것인가? - 화면이 자꾸 새로 그려진다.
화면이 새로 그려지면 자바스크립트는 함수 안에 여러 함수를 포함하고 있다.
같은 이름의 함수가 여러번 생성이 된다. - 문제 제기 
-> 사용자가 입력한 값을 담는 코드느 메모이제이션을 적용해야 한다. -> useCallBack을 사용하라.
아니면 객체에 담을 것인가?
-> 단 useCallback() 함수에 대해서 적용
-> 주의, 의존성 배열이 있다.
useCallback( () => {},[])
의존성배열에 잘못 변수를 넣었더니 무한반복 - JPA - 재귀호출
변수라면 useMemo( () => {}, [])

const board = {
 "b_title" : "제목:,
 "b_content": "내용",
}

const [board2, setBoard2] = useState({}) // 객체이다.
const [board, setBoard] = useState([]) // 배열(얕은복사, 깊은복사), 반복 출력, 변경, 초기화

사용자가 입력한 값은 반드시 useState에 담아야 하는가?
한 화면에사용자가 입력한 값은 동시에 두 개가 존재하지 않는다.
폼에 입력된 값을 객체로 처리한다.

get방식, post방식
@RequestParam - get방식
@RequsetBody - @ResponseBody -> json형식 내보낼 때 사용한다, post방식
@RestController 제공되기 전까지는 @ResponseBody만 사용했다.

QuillEditor와 관련된 컬럼명은 무엇인가요? - b_content
<TextArea>과 다른 점은 html태그 파싱- 처리 -> innerHTML
<p></p> 내용이랑만 관련이 있다.

ReBoardDBWrite.jsx와 QuillEditor.jsx가 분리되어 있다.(QuillEditor을 재사용하기 위해서)
props활용하여 값을 넘긴다. -{구조분해 할당}
props.title, props.authLogic,

입력된 값은 QuillEditor.jsx가 쥐고 있다.
글쓰기 버튼은 ReBoardDBWrite.jsx
ReBoardDBWrite.jsx에 글 내용을 담는 함수가 있다.
함수도 일급함수다. - 나도 클래스처럼 주소번지를 넘길 수 있다. 
props에 함수의 주소번지를 넘기는게 가능하다.
거꾸로는 불가하다.
만일 꼭 이렇게 처리해야 한다면 함수를 props로 넘겨서 문제를 해결할 수 있다.

<form id="f_board" action="/api/board/boardInsert">
   <lable for="fname">First name:</label><br>
   <input type="text" id="fname" name"fname" value="john"><br>
   <lable for="Iname">Last name:</label><br>
   <input type="text" id="Iname" name"Iname" value="Doe"><br><br>
   <input type="submit" value="Submit">전송
</form>
<form id="f_notice" action="/api/notice/noticeInsert">
   <lable for="fname">First name:</label><br>
   <input type="text" id="fname" name"fname" value="john"><br>
   <lable for="Iname">Last name:</label><br>
   <input type="text" id="Iname" name"Iname" value="Doe"><br><br>
   <input type="submit" value="Submit">
</form>
const forms = new FormData()

<p>If you click the "Submit" button, the form-data will be sent to a page called "/action_page.php".</p>
</body>
</html>


--------------------------------------------------------------------------------------------------------------------------------------------
작업 지시서
1. 폼트어썸 링크 추가 -> public -> index.html 추가

2. LoginPage - 로그인 화면
   Signup - 회원가입 화면
   Signtype - 회원, 강사

3. include -> Header.jsx 참고
헤더 부분에 로그인/로그아웃 버튼 추가
헤더 부분에 현재 로그인된 이메일 정보 출력하기

4. firebase.js 추가 -> auth 모듈

5. 인증 처리를 위한 공통 코드 -> authLogic.js

6. AuthLogic객체 생성 - 모든 화며에 props로 전달되어야 한다. - 비효율적이다.
-> 리덕스를 사용하자

7. npm i redux, npm i react-redux

8. src/redux폴더 추가
   src/components
   src/service
   src/styles - 사용자 정의 컴포넌트 제공

9. Tailwindcss - 프로젝트에 사용 여부 검토
--------------------------------------------------------------------------------------------------------------------------------------------
Spring Security
인증/인가

--------------------------------------------------------------------------------------------------------------------------------------------
글쓰기 작성시 작성자는 localStorage에서 읽어오는 값으로 자동 처리한다.
로그인 처리
구글 로그인
카카오 로그인(먼저 해보세요.)
스프링 처리 부분은 같이 해 본다.
마무리하는 것은 보인이 직접 해 본다.

--------------------------------------------------------------------------------------------------------------------------------------------
setProxy.js, 스프링 자바 config

3000 -> 8000
html
<form method="post" action="http://localhost:8000/api/board/imageUpload encType="multipart/form-data>
<input type="file" name="image" />
</form>

react
input 태그를 DOM API를 사용(자바 스크립트)하여 만들어 낸다. - 바닐라스크립트(순수한 자바)
document.getElementById()
document.querySelector("#)
createElement
appendChild
DOM API 직관적이지 않다.
string
handlebars
thy
-----------------------------------------------------------------------------------------------------------------------------------------------
이미지 버튼(QuillEditor - 선택 : 3000)을 클릭했다. - 8000보낸다.
3000번에서 8000번으로 요청을 보낸다. - 출저가 다르다. - 403 - setProxt.js해결한다. - 접두어 api를 붙인다.
http://localhost:8000/api/board/imageUpload

파일 이름을 만들어 준다. 파일이름을 8000번으로 보낸다.
같은 이름의 파일이 발생하지 않도록 한다. - 알고리즘


-----------------------------------------------------------------------------------------------------------------------------------------------
이미지  파일 처리, 첨부파일(zip, jar) 처리하는 것
텍스트 & 바이너리 (IO, 데드락 방지, 정지 - 속도가 빠르다.)
텍스트 - 사람 (문자로 처리)
바이너리 - 사람이 알아볼 수 없다.(숫자와 문자가 섞여 있어 알아 볼 수 없다.)
첨부파일 처리 라이브러리 제공된다. - 스레드, 멀티 스레드,
병렬처리
네트워크 필수 (네트워크 7계층)
(스위칭 허브, 모델, ...)
언어의 제한
도메인
게임 - C, C++를 기본적으로 알아야 한다..

http - 텍스트프로토클