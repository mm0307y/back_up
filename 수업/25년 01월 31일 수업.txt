2025년 01월 31일 수업 내용 정리

REST API 6가지 
GET 방식 - 쿼리스트링 전달 - URL 뒤에 ?을 넘겨진다.
window.location.search - ?b_title=제목&b_email=kiwi@hot.com&b_content=내용

DELETE방식 - GET방식과 동일하게 처리
delete from 집합이름 where b_no=?;

------------------------------------------

HashMapBinder - bind() - 
반복되는 코드를 줄이기 위해서 공통클래스를 만들었다.
<input type="text" name="b_title" />
String b_title = requset.getParameter("b_title");
<input type="text" name="b_email" />
String b_mail = requset.getParameter("b_email");
<input type="text" name="b_content" />
String b_content = requset.getParameter("b_content");

bind 메서드 활용
// 파라미터의 req는 서블릿에서 제공된다. - 원본
HashMapBinder hmb = new HashMapBinder(req);
// 사용하는 곳에서 Map을 인스턴스화 한다. - 원본
// 파라미터를 통해서 외부에서 생성된 인스턴스변수를 넘긴다.
// 참조 변수는 주소번지를 넘긴다. - 원본 - 얕은 복사
hmb.bind(pmap)

전체 목록 조회 - url패턴-/pojo/board/boardList.do
- 전체 목록 가져오기
- 조건검색 결과 가져오기
gubun : b_title or b_content or mem_nickname
keyword : 사용자가 입력한 문자열

상세 조회 - /pojo/obard/boardDetail.do
저 둘이 같은 쿼리문을 공유한다.(하나의 쿼리문이지만 조건에 따라 결과가 달라진다.)
if문 - b_no

- 한 건만 가져오기
- 조회수 증가시키기 -b_hit
- 한 건을 조회했을 때 b_no가 일치하는 react_board_comment테이블 조회를 한다.

왜 이런 순서로 실습을 진행하는가?
1. 프론트엔드와 백엔드가 분리되어 있다.
: 왔다갔다 하면서 코드를 작성하기 - 놓치기 쉽다.

2. 최대한 백엔드 쪽에 집중하거나 프론트 엔드에 집중하도록 실습을한다.

3. 프론트와 백엔드를 완전히 분리한다.

4. post방식이나 put방식은 단위테스트가 불가하다. - postman을 사용하기.
postman을 사용하면 화면이 없어도 테스트가 가능하다.

5. 댓글 구현하기 - 3개
- member250120
- react_board
- react_board_comment









 