// int i = 1, double d = 3.14
// 자바에서는 변수 이름앞에 타입이 온다.
// 컴파일 타임 에러 - 문법체크 + 타입체크
// ES5 - var 사용한다. - 호이스팅 이슈 문제점 제시
// ES6 - let, const - 호이스팅 이슈 해결했다.
// for문에서는 let을 사용하고 상수일땐 const사용한다.
// 약형언어는 타입이 런타임시에 결정된다.
// 타입에 대한 버그가 많이 발생할 수 있다.
// 진입장벽이 낮다. 이래도 괜찮고 저래도 괜찮다.
// 강형언어 자바는 타입이 체크 된다. - 컴파일 타임에

let a // 변수 선언 - 타입이 없다. 타입은 언제 결졍되지. - 런타임시 문자열이었다가 숫자일 수 있다.
const b = 1 // 상수 선언 - 재할당이 불가하다. 
a = 2
// b = 2 // 선언은 되지만 방영이 안된다.
// 변수 i는 상수라서 재할당이 불가하다.
// for (const i =1; i<3; i++)

let i
// 첫번째 자리는 변수 선언 및 초기화
// 두번째 자리는 조건식을 작성한다.
// 세번째 자리는 증감연산자를 작성한다.
for (i = 1; i < 3; i++){
  console.log(i)
} //end of for
// for문에서 두번째 자리에서 1<3 실행문
// 세번째엥서 증가연산자 i = 1+1 => 2
// 2<3 참이니까 실행문이 실행된다. i = 2+1 => 3
// 3<3 아니니까 for문을 탈출한다.
console.log(i)