{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtwd9\\\\Desktop\\\\Java\\\\workspace_react\\\\cloudinary-step2\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./app.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CardApp1210 from \"./CardApp1210\";\nimport AuthLogic from \"./service1212/authLogic1212\";\nimport { app } from \"./service1212/firebase1212\";\nimport ImageUploader from \"./service1212/image_upload1212\";\nimport ImageFileInput1212 from \"./components1210/common1210/ImageFileInput1212\";\nimport CardLogic from \"./service1212/cardLogic1216\";\n\n// 로그인 객체를 왜 여기서 생성하나요?\n// 리액트는 상위태그에서 하위태그로만 프롭스를 넘길 수 있다.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst authLogic = new AuthLogic(app);\n// firebase ReaItime Database를 활용하기 위해서 공통코드 생성하기\nconst cardLogic = new CardLogic(app);\nconst imageUploader = new ImageUploader();\nconst FileInput = props => {\n  /*#__PURE__*/_jsxDEV(ImageFileInput1212, {\n    ...props,\n    imageUploader: imageUploader\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n_c = FileInput;\nconst root = ReactDOM.createRoot(document.querySelector(\"#root\"));\nroot.render(/*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(CardApp1210, {\n      FileInput: FileInput,\n      authLogic: authLogic,\n      cardLogic: cardLogic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this)\n}, void 0, false));\nvar _c;\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","CardApp1210","AuthLogic","app","ImageUploader","ImageFileInput1212","CardLogic","jsxDEV","_jsxDEV","Fragment","_Fragment","authLogic","cardLogic","imageUploader","FileInput","props","fileName","_jsxFileName","lineNumber","columnNumber","_c","root","createRoot","document","querySelector","render","children","$RefreshReg$"],"sources":["C:/Users/mtwd9/Desktop/Java/workspace_react/cloudinary-step2/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./app.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport CardApp1210 from \"./CardApp1210\";\r\nimport AuthLogic from \"./service1212/authLogic1212\";\r\nimport { app } from \"./service1212/firebase1212\";\r\nimport ImageUploader from \"./service1212/image_upload1212\";\r\nimport ImageFileInput1212 from \"./components1210/common1210/ImageFileInput1212\";\r\nimport CardLogic from \"./service1212/cardLogic1216\";\r\n\r\n// 로그인 객체를 왜 여기서 생성하나요?\r\n// 리액트는 상위태그에서 하위태그로만 프롭스를 넘길 수 있다.\r\nconst authLogic = new AuthLogic(app);\r\n// firebase ReaItime Database를 활용하기 위해서 공통코드 생성하기\r\nconst cardLogic = new CardLogic(app);\r\nconst imageUploader = new ImageUploader();\r\n\r\nconst FileInput = (props) => {\r\n  <ImageFileInput1212 {...props} imageUploader={imageUploader} />;\r\n};\r\n\r\nconst root = ReactDOM.createRoot(document.querySelector(\"#root\"));\r\nroot.render(\r\n  <>\r\n    <BrowserRouter>\r\n      {/* 리액트에서 사용자정의 태그는 일급함수이다 */}\r\n      <CardApp1210\r\n        FileInput={FileInput}\r\n        authLogic={authLogic}\r\n        cardLogic={cardLogic}\r\n      />\r\n    </BrowserRouter>\r\n  </>\r\n);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,WAAW;AAClB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,6BAA6B;AACnD,SAASC,GAAG,QAAQ,4BAA4B;AAChD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,kBAAkB,MAAM,gDAAgD;AAC/E,OAAOC,SAAS,MAAM,6BAA6B;;AAEnD;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,SAAS,GAAG,IAAIT,SAAS,CAACC,GAAG,CAAC;AACpC;AACA,MAAMS,SAAS,GAAG,IAAIN,SAAS,CAACH,GAAG,CAAC;AACpC,MAAMU,aAAa,GAAG,IAAIT,aAAa,CAAC,CAAC;AAEzC,MAAMU,SAAS,GAAIC,KAAK,IAAK;EAC3B,aAAAP,OAAA,CAACH,kBAAkB;IAAA,GAAKU,KAAK;IAAEF,aAAa,EAAEA;EAAc;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjE,CAAC;AAACC,EAAA,GAFIN,SAAS;AAIf,MAAMO,IAAI,GAAGtB,QAAQ,CAACuB,UAAU,CAACC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTjB,OAAA,CAAAE,SAAA;EAAAgB,QAAA,eACElB,OAAA,CAACR,aAAa;IAAA0B,QAAA,eAEZlB,OAAA,CAACP,WAAW;MACVa,SAAS,EAAEA,SAAU;MACrBH,SAAS,EAAEA,SAAU;MACrBC,SAAS,EAAEA;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW;AAAC,gBAChB,CACJ,CAAC;AAAC,IAAAC,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}