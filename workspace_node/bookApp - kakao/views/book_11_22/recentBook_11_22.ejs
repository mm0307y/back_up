<div id="recent_book" class="row"></div>
<!--최신도서목록템플릿-->
<script id="temp_recent" type="text/x-handlebars-template">
    {{#each documents}}
        <div class="col-6 col-md-2 my-5">
            <div class="card my-2 mx-2">
                <div class="card-body text-center">
                    <img src="{{ thumbnail }}" index="{{@index}}" style="cursor:pointer;width:80%"/>
                </div>
            </div>
        </div>
    {{/each}}
</script>

<!-- 최신도서목록 템플릿 -->
<script>
  const getRecent = () => {
    $.ajax({
      method: "GET",
      url: "https://dapi.kakao.com/v3/search/book?target=title",
      headers: { Authorization: "KakaoAK 6b10a8106270f172344447e5cec8953b" },
      data: { query: "인공지능", page: 1, size: 10, sort: "latest" }, /* 파라미터로 넘어가는 값 - 노출된다. 그래서 보안이 취약하다. */
      dataType: "json", // 응답으로 받는 타입은 JSON이다. - 왜냐하면 카카오 서버가 나에게 soctt계정과 tiger비밀번호를 알려줄수 없기때문이다.(서버 계정을 알려줄수 없어서)

      success: function (data) { // 성공했다. if(ajax.readyState == 4)
        // 응답으로 받은 정보를 data가 쥐고 있다. data는 json형식이다.
        console.log(data)

        // 응답으로 받은 데이터를 미리 선언해둔 템플릿(화면)에 매핑해준다.(머지)
        let temp = Handlebars.compile($("#temp_recent").html())

        // div태그 안에 Handlebars템플릿 반영하여 출력하기 - 시각화
        // 실제 태그정보와 데이터를 머지하는 것을 Handlebars가 자동으로 해준다.
        $("#recent_book").html(temp(data))
        recentSlider()
      },
      error: function (error) {
        console.log(error)
      }
    }); //// end of ajax

  }
  getRecent()
  function recentSlider() {
    $('#recent_book').slick({
      slide: 'div',  //슬라이드 되어야 할 태그 ex) div, li 
      infinite: true,  //무한 반복 옵션
      slidesToShow: 6,  // 한 화면에 보여질 컨텐츠 개수
      slidesToScroll: 1,  //스크롤 한번에 움직일 컨텐츠 개수
      speed: 100,  // 다음 버튼 누르고 다음 화면 뜨는데까지 걸리는 시간(ms)
      arrows: true,  // 옆으로 이동하는 화살표 표시 여부
      dots: true,  // 스크롤바 아래 점으로 페이지네이션 여부
      autoplay: true,  // 자동 스크롤 사용 여부
      autoplaySpeed: 10000,  // 자동 스크롤 시 다음으로 넘어가는데 걸리는 시간 (ms)
      pauseOnHover: true,  // 슬라이드 이동    시 마우스 호버하면 슬라이더 멈추게 설정
      vertical: false,  // 세로 방향 슬라이드 옵션
      prevArrow: "<button type='button' class='slick-prev'><div style='font-size:1.5rem;color:white;'>&lt;</div></button>",  // 이전 화살표 모양 설정
      nextArrow: "<button type='button' class='slick-next'><div style='font-size:1.5rem;color:white;'>&gt;</div></button>",  // 다음 화살표 모양 설정
      dotsClass: "slick-dots",  //아래 나오는 페이지네이션(점) css class 지정
      draggable: true,  //드래그 가능 여부 

      // 반응형 웹구현 옵션
      responsive: [
        {
          breakpoint: 960,  //화면 사이즈 960px
          settings: { slidesToShow: 3 }  //위에 옵션이 디폴트 , 여기에 추가하면 그걸로 변경
        },
        {
          breakpoint: 768,  //화면 사이즈 768px
          settings: { slidesToShow: 2 }  //위에 옵션이 디폴트 , 여기에 추가하면 그걸로 변경
        }
      ]
    });
  }  
</script>