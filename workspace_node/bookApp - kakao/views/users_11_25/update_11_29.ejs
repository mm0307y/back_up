<div class="row my-5">
  <div class="col">
    <h1 class="text-center mb-5">회원정보수정</h1>
    <div class="card p-5">
      <form name="frm" method="post">
        <div class="input-group my-2">
          <div class="input-group-text px-5">성명</div>
          <input class="form-control" name="name"/>
        </div>
        <div class="input-group my-2">
          <div class="input-group-text px-5">주소</div>
          <input class="form-control" name="address"/>
        </div>
        <div class="input-group my-2">
          <div class="input-group-text px-5">전화</div>
          <input class="form-control" name="phone"/>
        </div>
        <div>
          <img id="fileName" src="https://placehold.co/200x200" width="30%" />
          <input class="form-control mt-2" type="file" name="file" />
        </div>
        <div class="text-center mt-3">
          <button class="btn-primary btn px-5">정보수정</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script type="module">
  /* 
    <script type="text/javascript"> - commonjs - 브라우저 제공하는 web api사용가능
    node_modules 아래에 있는 js들은 사용불가하다.
    그래도 사용하고 싶다. - cdn에 있는 js url을 사용해야 한다.
  */
  import { app } from "/javascripts/firebase_11_25.js"
  // to do -> addDoc와 setDoc의 차이점이 뭔지?, NoSQL의 경우 입력과 수정을 구분하지 않습니다.
  import { getFirestore, setDoc, doc, collection, getDoc } from "https://www.gstatic.com/firebasejs/11.0.2/firebase-firestore.js"
  import { getStorage, uploadBytes, getDownloadURL, ref } from "https://www.gstatic.com/firebasejs/11.0.2/firebase-storage.js"

  const db = getFirestore(app) // firebase-firestore사용할 때
  const storage = getStorage(app) // firebase-storage사용할 때
  const uid = localStorage.getItem("uid")
  console.log(`uid : ${uid}`)

  // 수정하기 화면을 열때 firestore에 접속하여 사용자 정보를 가져와 화면에 출력하기
  const snapshot = await getDoc(doc(db, `users/${uid}`))
  if (snapshot.data()) {
    const user = snapshot.data()
    $(frm.name).val(user.name)
    $(frm.address).val(user.address)
    $(frm.phoen).val(user.phoen)
    $(frm.email).val(user.email )

    // 사진이 존재하면
    if (user.photo) $("#fileName").attr("src", user.photo)
  }

  // submit사용시 새로고침이 발생하므로 반드시 이벤트 연결을 끊어야 한다.
  $(frm).on("submit", async (e) => {
    e.preventDefault()
    if (window.confirm("변경 내용을 수정 하시겠습니까?")) {
      const name = $(frm.name).val()
      const address = $(frm.address).val()
      const phone = $(frm.phone).val()
      const email = localStorage.getItem("email")
      // console.log(`${uid}, ${name}, ${address}, ${phone}, ${email}`)

      // 사진파일이 존재하면
      if (frm.file.files[0]) {
        const snapshot = await uploadBytes(ref(storage, `/photo/${Date.now()}`), frm.file.files[0])
        const url = await getDownloadURL(snapshot.ref)

        await setDoc(doc(db, `users/${uid}`), {
          // 키와 벨류가 같을 때는 벨류를 정하지 않아도 된다. ex) email: email -> email
          email: email,
          name: name,
          address: address,
          phone: phone,
          photo: url
        })
      }
      else {
        const photo = $("#fileName").attr("src")
        await setDoc(doc(db, `users/${uid}`), {
          // 키와 벨류가 같을 때는 벨류를 정하지 않아도 된다. ex) email: email -> email
          email: email,
          name: name,
          address: address,
          phone: phone,
          photo: photo
        })
      }
      alert("사용자 정보가 변경되었습니다.")
      location.href = "/users/mypage"
    } //// end of if
  })

  $(frm.file).on("change", function (e) {
    $("#fileName").attr("src", URL.createObjectURL(e.target.files[0]))
  })
</script>